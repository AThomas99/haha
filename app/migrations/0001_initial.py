# Generated by Django 3.1.5 on 2021-07-06 10:13

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='email')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('has_patient_basic_info_access', models.BooleanField(default=False)),
                ('has_patient_vital_access', models.BooleanField(default=False)),
                ('is_reception', models.BooleanField(default=False)),
                ('is_nurse', models.BooleanField(default=False)),
                ('is_doctor', models.BooleanField(default=False)),
                ('is_technician', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('users', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=250, null=True)),
                ('last_name', models.CharField(blank=True, max_length=250, null=True)),
                ('telno', models.CharField(blank=True, max_length=13, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('speciality', models.CharField(blank=True, choices=[('Pediatrician', 'Pediatrician'), ('Gynecologist', 'Gynecologist'), ('Cardiologist', 'Cardiologist'), ('Surgeon', 'Surgeon'), ('Ophthalmologist', 'Ophthalmologist'), ('Dermatologist', 'Dermatologist')], max_length=200, null=True)),
                ('description', ckeditor.fields.RichTextField()),
                ('joined_at', models.DateField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctors',
            },
            managers=[
                ('doctor', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='LabTechnician',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('joined_at', models.DateField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Lab Technician',
                'verbose_name_plural': 'Lab Technicians',
            },
            managers=[
                ('lab_technician', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('birth_date', models.DateField()),
                ('age', models.IntegerField()),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('registered', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('patient_status', models.CharField(choices=[('Registered', 'Registered'), ('Treatment', 'Treatment'), ('Admitted', 'Admitted'), ('Discharged', 'Discharged'), ('Outpatient', 'Outpatient')], max_length=250)),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doctor_patient', to='app.doctor')),
                ('lab_technician', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_lab', to='app.labtechnician')),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
            },
            managers=[
                ('patient', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, default='default/user.png', upload_to='users/%Y/%m/%d')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            managers=[
                ('users', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Reception',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('joined_at', models.DateField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reception',
                'verbose_name_plural': 'Reception',
            },
            managers=[
                ('reception', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Presciption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_description', ckeditor.fields.RichTextField()),
                ('patient_instruction', models.CharField(max_length=250)),
                ('presciption_date', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doctor_prescription', to='app.doctor')),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='patient_prescription', to='app.patient')),
            ],
        ),
        migrations.CreateModel(
            name='PatientVitals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body_temperature', models.CharField(max_length=10)),
                ('body_pressure', models.CharField(max_length=10)),
                ('pulse_rate', models.CharField(max_length=10)),
                ('respiration_rate', models.CharField(max_length=10)),
                ('body_height', models.CharField(max_length=10)),
                ('body_weight', models.CharField(max_length=10)),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.patient')),
            ],
            options={
                'verbose_name': 'Vital',
                'verbose_name_plural': 'Vitals',
            },
        ),
        migrations.CreateModel(
            name='PatientEmergency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_relation', models.CharField(blank=True, max_length=250, null=True)),
                ('patient_family_name', models.CharField(blank=True, max_length=250, null=True)),
                ('patient_family_number', models.CharField(max_length=15, unique=True)),
                ('patient', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Nurse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('joined_at', models.DateField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Nurse',
                'verbose_name_plural': 'Nurse',
            },
            managers=[
                ('nurse', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('appointment_time', models.CharField(choices=[('09:00 AM', '09:00 AM'), ('09:40 AM', '09:40 AM'), ('10:00 AM', '10:00 AM'), ('10:40 AM', '10:40 AM'), ('11:00 AM', '11:00 AM'), ('11:40 AM', '11:40 AM'), ('12:00 AM', '12:00 AM'), ('12:40 AM', '12:40 AM'), ('13:00 AM', '13:00 AM'), ('13:40 AM', '13:40 AM'), ('14:00 AM', '14:00 AM')], max_length=8)),
                ('created_on', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('note', ckeditor.fields.RichTextField()),
                ('doctor_assigned', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doctor_assigned', to='app.doctor')),
                ('patient_requested', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_appointment', to='app.patient')),
            ],
        ),
    ]
